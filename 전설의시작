// ===== 기본 게임 설정 =====
const int potPin = A0;
const int rows = 10;   // 9줄 + 판정선 1줄
const int cols = 4;
char screen[rows-1][cols]; // 0~8번 줄 (9줄)만 실제 타일 표시
int score = 0;
bool gameOver = false;      // 게임 종료 여부
unsigned long lastUpdate = 0;
int speed = 300;

// ===== 초기화 =====
void setup() {
  Serial.begin(9600);
  for(int i = 0; i < rows-1; i++) {
    for(int j = 0; j < cols; j++) {
      screen[i][j] = ' ';
    }
  }
}

// ===== 메인 루프 =====
void loop() {
  if (gameOver) return; // 게임 종료 시 더 이상 진행하지 않음

  if (millis() - lastUpdate > speed) {
    lastUpdate = millis();
    dropTiles();
    checkMiss();   // ❗ 타일 놓침 여부 확인
    spawnTile();
    checkHit();
    drawScreen();
  }
}

// ===== 타일 한 칸씩 아래로 이동 =====
void dropTiles() {
  for(int i = rows-2; i > 0; i--) { // 8~1 줄을 7~0 줄에서 이동
    for(int j = 0; j < cols; j++) {
      screen[i][j] = screen[i-1][j];
    }
  }
  // 맨 윗줄 초기화
  for(int j = 0; j < cols; j++) {
    screen[0][j] = ' ';
  }
}

// ===== 랜덤 타일 생성 =====
void spawnTile() {
  int pos = random(0, cols);
  if (!gameOver) screen[0][pos] = '#';
}

// ===== ✅ 판정 성공 (맨 아래 한 줄 위, 즉 8번째 줄) =====
void checkHit() {
  int potValue = analogRead(potPin);
  int inputPos = map(potValue, 0, 1023, 0, cols);

  if (screen[rows-2][inputPos] == '#') {  // rows-2 = 8번째 줄
    screen[rows-2][inputPos] = ' ';       // 타일 삭제
    score++;
  }
}

// ✅ **타일 놓쳤는지 확인 (판정 줄에서 성공 못하고 더 내려간 경우)**
void checkMiss() {
  for(int j = 0; j < cols; j++) {
    if (screen[rows-2][j] == '#') {
      // 타일이 판정 구역에 있는데 성공 처리 못하고 지나치면 → 게임오버
      gameOver = true;
      drawGameOver();
      return;
    }
  }
}

// ===== 화면 출력 =====
void drawScreen() {
  Serial.println("============");
  for(int i = 0; i < rows-1; i++) {   // 0~8 줄 출력
    Serial.print("|");
    for(int j = 0; j < cols; j++) {
      Serial.print(" ");
      Serial.print(screen[i][j]);
      Serial.print(" |");
    }
    Serial.println();
  }

  // ✅ 판정선 표시
  Serial.print(" ");
  for(int j = 0; j < cols; j++) Serial.print("ㅡㅡ  ");
  Serial.println();

  Serial.print("Score: ");
  Serial.println(score);
}

// ✅ **Game Over 화면 출력**
void drawGameOver() {
  Serial.println("============");
  Serial.println("   GAME OVER   ");
  Serial.print("Final Score: ");
  Serial.println(score);
  Serial.println("============");
}
